/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas;

import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.naming.NamingException;
import javax.swing.JOptionPane;
import raven.datetime.component.date.DatePicker;
import servicios.EstadoReservacionServicio;
import servicios.ReservacionServicio;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Salvador Hernández
 */
public class ReservacionesVista_Editar extends javax.swing.JInternalFrame {

    private ReservacionesVista reservacionesVista;
    private ReservacionServicio tmp;
    private int id;

    DatePicker dtIngreso = new DatePicker();
    DatePicker dtSalida = new DatePicker();

    DateTimeFormatter fFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    DateTimeFormatter dtFormat = DateTimeFormatter.ofPattern("dd-MM-yyyy");
    LocalDate iniFecha;
    String siFecha;
    LocalDate finFecha;
    String fnFecha;

    List<ReservacionServicio> habitaciones;

    public ReservacionesVista_Editar(ReservacionesVista reservacionesVista, int id) {
        initComponents();

        this.reservacionesVista = reservacionesVista;
        this.id = id;
        dtIngreso.setEditor(txtFechaIngreso);
        dtSalida.setEditor(txtFechaSalida);

        try {
            habitaciones = ReservacionServicio.obtenerTipoHabitacion();
            selectHabitacion.removeAllItems();
            selectHabitacion.addItem("Selecciona una habitación");

            for (ReservacionServicio habitacion : habitaciones) {
                selectHabitacion.addItem("No. " + habitacion.getNumHab() + " - " + habitacion.getTipo() + " - " + habitacion.getTotal());

            }

            List<EstadoReservacionServicio> estados = EstadoReservacionServicio.obtenerEstadosReservacion();
            selectReservacion.removeAllItems();
            selectReservacion.addItem("Selecciona una habitación");

            for (EstadoReservacionServicio estado : estados) {
                selectReservacion.addItem(estado.getDetalleEstado());
            }

        } catch (SQLException | NamingException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al obtener los tipos de habitaciones.");
        }

        try {
            this.tmp = ReservacionServicio.obtenerReservacion(id);
            txtIdReserva.setText(String.valueOf(id));
            iniFecha = LocalDate.parse(tmp.getFechaIngreso(), fFormat);
            siFecha = iniFecha.format(dtFormat);
            dtIngreso.setSelectedDate(LocalDate.parse(siFecha, dtFormat));

            finFecha = LocalDate.parse(tmp.getFechaSalida(), fFormat);
            fnFecha = finFecha.format(dtFormat);
            dtSalida.setSelectedDate(LocalDate.parse(fnFecha, dtFormat));

            txtIdCliente.setText(String.valueOf(tmp.getClienteId()));
            txtPagar.setText(String.valueOf(tmp.getTotal()));
            txtObservaciones.setText(tmp.getObservaciones());

            selectHabitacion.setSelectedIndex(tmp.getNumHab());
            selectReservacion.setSelectedIndex(tmp.getEstadoReserva());
        } catch (NamingException | SQLException ex) {
            ex.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtIdCliente = new javax.swing.JTextField();
        selectHabitacion = new javax.swing.JComboBox<>();
        selectReservacion = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFechaIngreso = new javax.swing.JFormattedTextField();
        txtFechaSalida = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtIdReserva = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lbDiasReservados = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPagar = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(916, 629));
        setMinimumSize(new java.awt.Dimension(916, 629));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                abrirVentan(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Editar Reservación");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel2.setText("Habitación");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setText("Documento de Identificación del Cliente");

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtIdCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIdCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdClienteKeyTyped(evt);
            }
        });

        selectHabitacion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selectHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectHabitacionActionPerformed(evt);
            }
        });

        selectReservacion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setText("Estado de Reservación");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel4.setText("Total a Pagar");

        txtObservaciones.setColumns(20);
        txtObservaciones.setLineWrap(true);
        txtObservaciones.setRows(5);
        jScrollPane1.setViewportView(txtObservaciones);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel6.setText("Observaciones");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel7.setText("Fecha de Ingreso");

        txtFechaIngreso.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtFechaSalida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel8.setText("Fecha de Salida");

        txtIdReserva.setEditable(false);
        txtIdReserva.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIdReserva.setEnabled(false);
        txtIdReserva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdReservaKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel9.setText("Id");

        jLabel10.setText("Días reservados:");

        txtPagar.setEditable(false);
        txtPagar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPagar.setEnabled(false);
        txtPagar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPagarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10)
                            .addGap(18, 18, 18)
                            .addComponent(lbDiasReservados)
                            .addGap(137, 137, 137)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtIdReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtPagar, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(selectReservacion, javax.swing.GroupLayout.Alignment.LEADING, 0, 455, Short.MAX_VALUE)
                                .addComponent(selectHabitacion, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtIdCliente, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(45, 45, 45))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(92, 92, 92)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(lbDiasReservados)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectReservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnGuardar))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        try {
            String idReserva = txtIdReserva.getText();
            String fechaIngreso = txtFechaIngreso.getText();
            String fechaSalida = txtFechaSalida.getText();
            String idCliente = txtIdCliente.getText();
            int habitacion = selectHabitacion.getSelectedIndex();
            int stReservacion = selectReservacion.getSelectedIndex();
            String total = txtPagar.getText();
            String observaciones = txtObservaciones.getText();

            if (habitacion == 0) {
                JOptionPane.showMessageDialog(this, "Selecciona una Habitacion.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (stReservacion == 0) {
                JOptionPane.showMessageDialog(this, "Selecciona un Estado de Reservación.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (fechaIngreso.isEmpty() || fechaSalida.isEmpty() || idCliente.isEmpty() || total.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int idRes = parseInt(idReserva);
            int id = parseInt(idCliente);
            double totalPagar = parseDouble(total);

            if (ReservacionServicio.actualizarReservacion(idRes, habitacion, id, stReservacion, fechaIngreso, fechaSalida, totalPagar, observaciones)) {

                JOptionPane.showMessageDialog(this, "Reservación actualizada exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                reservacionesVista.abrirReservacion();

            } else {
                JOptionPane.showMessageDialog(this, "No fue posible actualizar la reservación, consulta con tu administrador de sistemas", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        reservacionesVista.abrirReservacion();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtIdClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdClienteKeyTyped
        char c = evt.getKeyChar();

        if ((c < '0' || c > '9') && (c != '.' || txtIdCliente.getText().contains("."))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIdClienteKeyTyped

    private void selectHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectHabitacionActionPerformed
        int selectedIndex = selectHabitacion.getSelectedIndex();

        if (selectedIndex > 0 && !"--/--/----".equals(txtFechaIngreso.getText()) && !"--/--/----".equals(txtFechaSalida.getText())) {
            ReservacionServicio selectedHabitacion = habitaciones.get(selectedIndex - 1);

            String fechaIngresoStr = txtFechaIngreso.getText();
            System.out.println(fechaIngresoStr);
            String fechaSalidaStr = txtFechaSalida.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

            try {

                Date fechaIngreso = dateFormat.parse(fechaIngresoStr);
                Date fechaSalida = dateFormat.parse(fechaSalidaStr);

                long difEnMilisegundos = fechaSalida.getTime() - fechaIngreso.getTime();
                long difDias = TimeUnit.DAYS.convert(difEnMilisegundos, TimeUnit.MILLISECONDS);
                lbDiasReservados.setText(String.valueOf(difDias));

                double totalPagar = difDias * selectedHabitacion.getTotal();

                txtPagar.setText(String.valueOf(totalPagar));

            } catch (ParseException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al parsear las fechas. Asegúrate de que las fechas estén en el formato correcto (dd/MM/yyyy).", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_selectHabitacionActionPerformed

    private void txtIdReservaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdReservaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdReservaKeyTyped

    private void txtPagarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPagarKeyTyped

    private void abrirVentan(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_abrirVentan
        // TODO add your handling code here:
    }//GEN-LAST:event_abrirVentan


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbDiasReservados;
    private javax.swing.JComboBox<String> selectHabitacion;
    private javax.swing.JComboBox<String> selectReservacion;
    private javax.swing.JFormattedTextField txtFechaIngreso;
    private javax.swing.JFormattedTextField txtFechaSalida;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtIdReserva;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JTextField txtPagar;
    // End of variables declaration//GEN-END:variables
}
